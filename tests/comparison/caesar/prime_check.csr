# Prime checking benchmark for Caesar
# Usage: caesar prime_check.csr <limit>

def is_prime(n):
    if n < 2:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    
    i = 3
    while i * i <= n:
        if n % i == 0:
            return False
        i = i + 2
    return True

def count_primes(limit):
    count = 0
    i = 2
    while i <= limit:
        if is_prime(i):
            count = count + 1
        i = i + 1
    return count

def main():
    # For this benchmark, we'll use a fixed value
    limit = 1000  # Can be modified for different test scales
    
    result = count_primes(limit)
    
    # Don't print result to avoid affecting timing

# Run main function directly
main()